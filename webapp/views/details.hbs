<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <title>OpenDLV Vehicle View - Details for '{{name}}'</title>

  <link type="text/css" rel="stylesheet" href="css/maptalks.css"/>
  <link type="text/css" rel="stylesheet" href="css/all.css"/>
  <link type="text/css" rel="stylesheet" href="css/bootstrap.min.css"/>
  <link type="text/css" rel="stylesheet" href="css/navbar-top-fixed.css"/>

  <style>
      #map { width: 640px; height: 480px; }
  </style>
</head>

<script>
function deleteExternallySuppliedODVDFile() {
    if (confirm("Do you really want to remove previously provided message specification file?")) {
        fetch('/deleteodvdfile', { method: 'post',
                                   headers: {
                                       'Accept': 'application/json, text/plain, */*',
                                       'Content-Type': 'application/json'
                                   } }
        )
        .then(function(response) {
            if(response.ok) {
                location.reload();
                return;
            }
            throw new Error('Request failed.');
            })
        .catch(function(error) {
            console.log(error);
        });
    }
}

{{#each attributes}}
{{#if geojson}}
var g_geojson = window.atob("{{value}}".replace("&#x3D;", "="));
{{/if}}
{{/each}}
</script>

<script>
var keepString = "";
function exportSelectedMessages() {
    $("input:checkbox").each(function() {
        if ($(this).is(":checked")) {
            if (0 == keepString.length) {
                keepString = "--keep=" + $(this).val();
            }
            else {
                keepString += "," + $(this).val();
            }
        }
    });
    if (0 != keepString.length) {
        if (confirm("Do you really want to export the selected messages into a new .rec file?")) {
            document.body.style.cursor = 'wait';
            fetch('/exportselectedmessages', { method: 'post',
                                               headers: {
                                                   'Accept': 'application/json, text/plain, */*',
                                                   'Content-Type': 'application/json'
                                               },
                                               body: JSON.stringify({keepString: keepString,
                                                                     recordingFile: "{{filename}}"})
                                             }
            )
            .then(function(response) {
                if(response.ok) {
                    var f = "{{filename}}";
                    alert('Messages exported into ' + f.substr(0, f.lastIndexOf('.rec')) + '-selection.rec. You can find the file in the folder view.');
                    document.body.style.cursor = 'default';
                    return;
                }
                document.body.style.cursor = 'default';
                throw new Error('Request failed.');
                })
            .catch(function(error) {
                console.log(error);
            });
        }
    }
    keepString = "";
}
</script>

<body>
  <nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
    <button id="back" type="button" class="fas fa-arrow-left" style="font-size:20px;color:#555;padding: 5px 30px;" onclick="location.href='/recordings'">
  </nav>


  <div class="container-fluid">
    <center>
      <div onclick="location.href='{{filename}}'" onmouseover="" style="cursor: pointer;"><h4>{{name}}</h4></div>
  {{#if hasODVD}}
      <button id="deleteExternallySuppliedODVDFile" type="button" class="far fa-trash-alt" style="font-size:20px;color:#555;padding: 5px 30px;" onclick="deleteExternallySuppliedODVDFile()" title="&nbsp;Remove provided message specification file.">Remove provided message specification file.</button>
  {{/if}}
    </center>
  </div>


  <div class="container-fluid">
    <div class="tabbable" id="tabs-list">
      <ul class="nav nav-tabs">
        <li class="nav-item">
          <a class="nav-link active show" href="#panel-overview" data-toggle="tab">Overview</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#panel-comments" data-toggle="tab">Comments</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#panel-messages" data-toggle="tab">Messages</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#panel-map" data-toggle="tab">Map</a>
        </li>
      </ul>

    <div class="tab-content">
      <div class="tab-pane active show" id="panel-overview">
        <center>
          <table cellpadding="2" width="60%">
            {{#each attributes}}
            <tr>
              <td align="left">
              {{#if messageID}}
              {{else if opendlv_system_LogMessage}}
              {{else if geojson}}
              {{else}}
                      {{key}}
              {{/if}}
              </td>
              <td align="left">
              {{#if messageID}}
              {{else if opendlv_system_LogMessage}}
              {{else if geojson}}
              {{else}}
                      {{value}}
              {{/if}}
              </td>
            </tr>
            {{/each}}
          </table>
        </center>
        <br>
      </div>

      <div class="tab-pane" id="panel-comments">
        <center>
          <table cellpadding="2" width="60%">
            {{#each attributes}}
            <tr>
              <td align="left">
              {{#if opendlv_system_LogMessage}}
                <i class="far fa-comment"></i> {{key}}:
              {{else}}
              {{/if}}
              </td>
              <td align="left">
              {{#if opendlv_system_LogMessage}}
                "{{value}}"
              {{else}}
              {{/if}}
              </td>
            </tr>
            {{/each}}
          </table>
        </center>
      </div>

      <div class="tab-pane" id="panel-messages">
        <br>
        <center><button id="exportSelectedMessages" type="button" class="far fa-check-square" style="font-size:20px;color:#555;padding: 5px 30px;" onclick="exportSelectedMessages()" title="Export the selected messages into a new .rec file.">&nbsp;Export the selected messages into a new .rec file.</button></center>
        <br>
        <center>
          <table cellpadding="2" width="80%">
            {{#each attributes}}
            <tr>
              <td align="left">
                {{#if selectable}}
                <input type="checkbox" id="isSelected-{{key}}" name="isSelected-{{key}}" value="{{messageID}}/{{senderStamp}}" title="Include this message in export."/>
                {{/if}}
                {{#if messageID}}
                  number of '{{key}}' (message ID = {{messageID}}, sender stamp = {{senderStamp}}):
                {{else}}
                {{/if}}
              </td>
              <td align="right">
              {{#if messageID}}
                {{value}}
              {{else}}
              {{/if}}
              </td>
            </tr>
          {{/each}}
          </table>
        </center>
      </div>

      <div class="tab-pane" id="panel-map">
      <br>
      <center><div id="map"></div></center>
      </div>
    </div>

  </div>

  <script type="text/javascript" src="js/maptalks.min.js"></script>
  <script type="text/javascript" src="js/jquery-3.3.1.slim.min.js"></script>
  <script type="text/javascript" src="js/popper.min.js"></script>
  <script type="text/javascript" src="js/bootstrap.min.js"></script>

<script>
  var g_map = new maptalks.Map('map', {
    center: [12.0,57.68],
    zoom: 14,
    baseLayer: new maptalks.TileLayer('base', {
      urlTemplate: 'http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',
      subdomains: ['a','b','c','d'],
      attribution: '&copy; <a href="http://osm.org">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/">CARTO</a>'
    }),
    layers : [
      new maptalks.VectorLayer('v')
    ]
  });

  var marker = maptalks.GeoJSON.toGeometry(g_geojson).addTo(g_map.getLayer('v'));
  marker.setInfoWindow({
    'content'   : 'Click on marker to open.',
    'autoCloseOn' : 'click'
  });
/*
var list = `[{
		"type": "Feature1",
		"geometry": {
			"type": "Point",
			"coordinates": [12.0, 57.7]
		},
		"properties": {
			"name": "Dinagat Islands"
		}
	},
	{
		"type": "Feature2",
		"geometry": {
			"type": "Point",
			"coordinates": [12.0, 57.71]
		},
		"properties": {
			"name": "Dinagat Islands 2"
		}
	}
]
`;
var jlist = JSON.parse(list);
for (var key in jlist)
{
   if (jlist.hasOwnProperty(key))
   {
      // here you have access to
      console.log(jlist[key].type);
   }
}
console.log(list);
*/
</script>

</body>
</html>

